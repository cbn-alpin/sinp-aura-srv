server {
    listen 443 ssl http2; # managed by Certbot
    listen [::]:443 ssl http2; # managed by Certbot

    server_name donnees.biodiversite-auvergne-rhone-alpes.fr;

    # Set maintenance mode
    # Define root paths
    set $base_root_path /home/geonat/www;
    set $geonature_root_path $base_root_path/geonature/frontend/dist;
    set $maintenance_root_path $base_root_path/maintenance/geonature;
    # Disable maintenance mode by default
    set $maintenance off;

    # Activate maintenance mode ("short") if GeoNatue is being recompiled
    if (!-d $geonature_root_path) {
        set $maintenance on;
        set $maintenance_duration "short";
    }

    # Activate maintenance mode ("long") if file "maintenance.enable" exists
    if (-f $maintenance_root_path/maintenance.enable) {
        set $maintenance on;
        set $maintenance_duration "long";
    }

    # Disable maintenance mode if user browser send a cookie named "maintenance_disable" with a specific UUID value
    if ($cookie_maintenance_disable = "<uuid-maintenance-disable>") {
        set $maintenance off;
    }

    # Disable maintenance mode for specific IP (default web server IP)
    if ($remote_addr ~ (135.125.89.138|51.210.120.253)) {
        set $maintenance off;
    }

    # Disable maintenance mode for the URI with the path to the shared CSS, JS, or images used in the maintenance page.
    if ($uri ~ "^/maintenance/shared/") {
        set $maintenance off;
    }

    # Return HTTP code 503 (service unavailable) if maintenance is on
    if ($maintenance = on) {
        return 503;
    }

    error_page 503 @maintenance;

    # Display the long or short term maintenance page.
    location @maintenance {
        root $maintenance_root_path;
        rewrite ^(.*)$ "/maintenance.$maintenance_duration.html" break;
    }

    # Set root path
    root $geonature_root_path;

    # Change root path for shared files used in the maintenance page.
    location ~ "^/maintenance/shared/" {
        root $base_root_path;
    }

    # GeoNature Angular App
    # No cache for index.html Angular App and config/locale json files
    location ~* "^/index.html|.*\.json$" {
        expires -1;
        add_header Cache-Control "no-store";
    }
    # Favicon
    location "/favicon.ico" {
        expires 1y;
        add_header Cache-Control "public, no-transform";
    }
    # JS and CSS
    location ~* "^/[^/]+\.[0-9a-f]{20}\.(?:js|css)$" {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    # Images
    location ~* "^/[^/]+\.[0-9a-f]{20}\.(?:gif|jpe?g|png|svg)$" {
        expires 1y;
        add_header Cache-Control "public, no-transform, immutable";
    }
    # Fonts
    location ~* "^/[^/]+\.[0-9a-f]{20}\.(?:woff2?|eot|ttf)$" {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # GeoNature API
    location ^~ "/api/" {
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WARNING: up timeout to 300s for Synthese downloading (See bug )
        # Set timeout like Gunicorn in GeoNature config/settings.ini file
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        proxy_pass http://127.0.0.1:8000/;# ATTENTION : bien mettre un slash final ! Sinon => 404
    }

    # Alias for Export module
    location "/exports/schedules" {
        alias /home/geonat/www/geonature/backend/static/exports/schedules;
    }
    location "/exports/users" {
        alias /home/geonat/www/geonature/backend/static/exports/usr_generated;
    }

    ssl_certificate /etc/letsencrypt/live/donnees.biodiversite-auvergne-rhone-alpes.fr/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/donnees.biodiversite-auvergne-rhone-alpes.fr/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    listen 443 ssl http2; # managed by Certbot
    listen [::]:443 ssl http2; # managed by Certbot

    server_name
        donnees.biodiversite-aura.fr
        geonature.biodiversite-auvergne-rhone-alpes.fr
        geonature.biodiversite-aura.fr
        ~^(?:donnees|geonature)\.biodiversite-aura\.(?:com|eu|net|org)$
        ~^(?:donnees|geonature)\.biodiversite-auvergne-rhone-alpes\.(?:com|eu|net|org)$
        ~^(?:donnees|geonature)\.observatoire-biodiversite-auvergne-rhone-alpes\.(?:com|eu|fr|net|org)$
        ;

    ssl_certificate /etc/letsencrypt/live/donnees.biodiversite-auvergne-rhone-alpes.fr/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/donnees.biodiversite-auvergne-rhone-alpes.fr/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    return 302 https://donnees.biodiversite-auvergne-rhone-alpes.fr$request_uri;
}

server {
    listen 80;
    listen [::]:80;

    server_name
        donnees.biodiversite-auvergne-rhone-alpes.fr
        donnees.biodiversite-aura.fr
        geonature.biodiversite-auvergne-rhone-alpes.fr
        geonature.biodiversite-aura.fr
        ~^(?:donnees|geonature)\.biodiversite-aura\.(?:com|eu|net|org)$
        ~^(?:donnees|geonature)\.biodiversite-auvergne-rhone-alpes\.(?:com|eu|net|org)$
        ~^(?:donnees|geonature)\.observatoire-biodiversite-auvergne-rhone-alpes\.(?:com|eu|fr|net|org)$
        ;
    return 302 https://donnees.biodiversite-auvergne-rhone-alpes.fr$request_uri;
}
