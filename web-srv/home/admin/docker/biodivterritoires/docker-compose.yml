# Usage :
# - for dev : `docker compose --env-file .env.dev -f docker-compose.yml -f docker-compose.override.dev.yml up` with `.env.dev` file.
# - for prod : `docker compose -f docker-compose.yml up -d` with `.env` file.
version: "3.9"

services:

  biodivterritoires-redis:
    image: redis:7.0.5-bullseye
    container_name: biodivterritoires-redis
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 20s
      timeout: 60s
      start_period: 15s
    networks:
      - biodivterritoire-net
    command: redis-server --save 600 1 --loglevel warning
    volumes:
      - redis-storage:/data

  biodivterritoires-app:
    image: lpoaura/geonature-biodivterritoires:orb_aura
    build:
      context: ./build
      dockerfile: Dockerfile
      args:
        - APP_NAME=${APP_NAME:-"gnbt"}
        - APP_GUNICORN_WORKERS=${APP_GUNICORN_WORKERS:-4}
        - APP_GUNICORN_TIMEOUT=${APP_GUNICORN_TIMEOUT:-30}
        - APP_GUNICORN_HOST=${APP_GUNICORN_HOST:-0.0.0.0}
        - APP_GUNICORN_PORT=${APP_GUNICORN_PORT:-8080}
    container_name: biodivterritoires-app
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "-i", "http://${APP_GUNICORN_HOST:-0.0.0.0}:${APP_GUNICORN_PORT:-8080}/"]
      interval: 20s
      timeout: 60s
      start_period: 15s
    env_file:
      - .env
    environment:
      REDIS_HOST: "biodivterritoires-redis"
    ports:
      - ${APP_PORT:-8080}:8080
    depends_on:
      - biodivterritoires-redis
    networks:
      - biodivterritoire-net
      - default
    volumes:
      - ./custom:/app/app/static/custom/assets

volumes:
  redis-storage:

networks:
  default:
    name: nginx-proxy
    external: true
  biodivterritoire-net:
